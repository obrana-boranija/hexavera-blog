name: Process Images

on:
  push:
    paths:
      - 'Content/Images/**'
      - '!Content/Images/Processed/**'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write  # This grants write permissions to the repository

jobs:
  process-images:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Sharp for image processing
      run: npm install sharp

    - name: Check initial directory state
      run: |
        echo "=== Current directory ==="
        pwd
        echo "=== Directory structure ==="
        find Content -type f -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | head -20
        echo "=== Images directory contents ==="
        ls -la Content/images/ || echo "No images directory"

    - name: Process Images
      run: |
        node << 'EOF'
        const sharp = require('sharp');
        const fs = require('fs');
        const path = require('path');

        const sizes = [
          { width: 400, height: 300, suffix: '_sm' },
          { width: 800, height: 600, suffix: '_md' },
          { width: 1200, height: 900, suffix: '_lg' }
        ];

        async function processImages() {
          const imagesDir = './Content/images';
          const outputDir = './Content/images/processed';
          
          if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, { recursive: true });
          }

          // Get all files and filter for images
          const allFiles = fs.readdirSync(imagesDir);
          console.log('All files in directory:', allFiles);
          
          const files = allFiles
            .filter(file => {
              // Skip hidden files and directories
              if (file.startsWith('.')) return false;
              
              const filePath = path.join(imagesDir, file);
              const stat = fs.statSync(filePath);
              
              // Skip directories
              if (stat.isDirectory()) return false;
              
              // Check for image extensions
              return /\.(jpg|jpeg|png)$/i.test(file);
            });

          console.log('Filtered image files:', files);

          for (const file of files) {
            const inputPath = path.join(imagesDir, file);
            const name = path.parse(file).name;

            try {
              console.log(`Processing: ${file}`);
              
              // First, try to read metadata to validate the image
              const metadata = await sharp(inputPath).metadata();
              console.log(`  Format: ${metadata.format}, Size: ${metadata.width}x${metadata.height}`);

              // Create WebP versions in different sizes
              for (const size of sizes) {
                const outputPath = path.join(outputDir, `${name}${size.suffix}.webp`);
                
                await sharp(inputPath)
                  .resize(size.width, size.height, { 
                    fit: 'cover',
                    position: 'center'
                  })
                  .webp({ quality: 85 })
                  .toFile(outputPath);

                console.log(`  Created: ${outputPath}`);
              }

              // Create original size WebP
              const originalWebP = path.join(outputDir, `${name}.webp`);
              await sharp(inputPath)
                .webp({ quality: 90 })
                .toFile(originalWebP);
              
              console.log(`  Created: ${originalWebP}`);
              
            } catch (error) {
              console.error(`Failed to process ${file}:`, error.message);
              console.error(`Full error:`, error);
              // Continue with other images even if one fails
            }
          }
        }

        processImages().catch(console.error);
        EOF

    - name: Check processed images
      run: |
        echo "=== Checking Content/images directory ==="
        ls -la Content/images/ || echo "No images directory found"
        
        echo "=== Checking processed directory ==="
        if [ -d "Content/images/processed" ]; then
          ls -la Content/images/processed/
          echo "Total processed files: $(find Content/images/processed -type f | wc -l)"
        else
          echo "Processed directory does not exist!"
        fi

    - name: Commit processed images
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are any changes to commit
        git add Content/images/processed/
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          echo "Changes detected, committing..."
          git commit -m "Auto-process images [skip ci]"
          git push
          echo "Changes pushed successfully"
        fi
        
    - name: Summary
      if: always()
      run: |
        echo "=== Workflow Summary ==="
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        
        if [ -d "Content/images/processed" ]; then
          echo "Processed images created: $(find Content/images/processed -type f -name "*.webp" | wc -l)"
          echo "Files:"
          find Content/images/processed -type f -name "*.webp" | head -10
        else
          echo "No processed directory created"
        fi